Usage: /usr/local/bin/zig-linux-x86_64-0.9.0-dev.1920+de81c504b/zig build [steps] [options]

Steps:
  install (default)            Copy build artifacts to prefix path
  uninstall                    Remove build artifacts from prefix path
  run                          Run the app
  test                         Run unit tests

General Options:
  -p, --prefix [path]          Override default install prefix
  --prefix-lib-dir [path]      Override default library directory path
  --prefix-exe-dir [path]      Override default executable directory path
  --prefix-include-dir [path]  Override default include directory path

  --sysroot [path]             Set the system root directory (usually /)
  --search-prefix [path]       Add a path to look for binaries, libraries, headers
  --libc [file]                Provide a file which specifies libc paths

  -fdarling,  -fno-darling     Integration with system-installed Darling to
                               execute macOS programs on Linux hosts
                               (default: no)
  -fqemu,     -fno-qemu        Integration with system-installed QEMU to execute
                               foreign-architecture programs on Linux hosts
                               (default: no)
  --glibc-runtimes [path]      Enhances QEMU integration by providing glibc built
                               for multiple foreign architectures, allowing
                               execution of non-native programs that link with glibc.
  -frosetta,  -fno-rosetta     Rely on Rosetta to execute x86_64 programs on
                               ARM64 macOS hosts. (default: no)
  -fwasmtime, -fno-wasmtime    Integration with system-installed wasmtime to
                               execute WASI binaries. (default: no)
  -fwine,     -fno-wine        Integration with system-installed Wine to execute
                               Windows programs on Linux hosts. (default: no)

  -h, --help                   Print this help and exit
  --verbose                    Print commands before executing them
  --color [auto|off|on]        Enable or disable colored error messages
  --prominent-compile-errors   Output compile errors formatted for a human to read

Project-Specific Options:
  -Dtarget=[string]            The CPU architecture, OS, and ABI to build for
  -Dcpu=[string]               Target CPU features to add or subtract
  -Drelease-safe=[bool]        Optimizations on and safety on
  -Drelease-fast=[bool]        Optimizations on and safety off
  -Drelease-small=[bool]       Size optimizations on and safety off

Advanced Options:
  --build-file [file]          Override path to build.zig
  --cache-dir [path]           Override path to zig cache directory
  --zig-lib-dir [arg]          Override path to Zig lib directory
  --debug-log [scope]          Enable debugging the compiler
  --verbose-tokenize           Enable compiler debug output for tokenization
  --verbose-ast                Enable compiler debug output for parsing into an AST
  --verbose-link               Enable compiler debug output for linking
  --verbose-air                Enable compiler debug output for Zig AIR
  --verbose-llvm-ir            Enable compiler debug output for LLVM IR
  --verbose-cimport            Enable compiler debug output for C imports
  --verbose-cc                 Enable compiler debug output for C compilation
  --verbose-llvm-cpu-features  Enable compiler debug output for LLVM CPU features
